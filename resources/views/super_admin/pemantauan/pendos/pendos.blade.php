@extends('layouts.super_admin')

@section('content')
<!-- Breadcrumb Section -->


<div class="container-fluid">
    <!-- Informasi Project -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body bg-light">
            <h6 class="fw-bold mb-3">Informasi Project</h6>
            <div class="row">
                <div class="col-md-6">
                    <table class="table table-borderless mb-0">
                        <tr>
                            <td class="ps-0" style="width: 140px;">Nama Proyek</td>
                            <td class="px-3">:</td>
                            <td>{{ $project->nama_proyek }}</td>
                        </tr>
                        <tr>
                            <td class="ps-0">Keterangan</td>
                            <td class="px-3">:</td>
                            <td>{{ $project->keterangan }}</td>
                        </tr>
                    </table>
                </div>
                <div class="col-md-6">
                    <table class="table table-borderless mb-0">
                        <tr>
                            <td class="ps-0" style="width: 140px;">Tanggal Mulai</td>
                            <td class="px-3">:</td>
                            <td>{{ $project->tanggal_mulai }}</td>
                        </tr>
                        <tr>
                            <td class="ps-0">Tanggal Selesai</td>
                            <td class="px-3">:</td>
                            <td>{{ $project->tanggal_selesai }}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Data Pendos Section -->
    <div class="card border-0 shadow-sm">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h6 class="fw-bold mb-0">Data Dosis Pemantauan Pendos</h6>
                <a href="{{ route('super_admin.pendos.create', ['project' => $project->id]) }}" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>Tambah Data
                </a>
            </div>
            
            <!-- Search and Add Button -->
            <div class="row mb-3 align-items-center">
                <div class="col">
                    <div class="input-group" style="width: 250px;">
                        <input type="text" class="form-control form-control-sm" placeholder="Apply filter">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-search"></i>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Table -->
            <div class="d-flex align-items-center">
                <button class="btn btn-sm btn-secondary me-2" id="scrollLeftBtn">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <div class="table-responsive w-100" id="pendosTableContainer" data-start-year="2021" data-number-of-years="5">
                    <table class="table table-bordered table-hover" id="pendosTable">
                        <thead class="table-dark" id="pendosTableHeader">
                            <tr>
                                <th class="text-center align-middle" rowspan="1">No</th>
                                <th class="align-middle" rowspan="1">Nama</th>
                                <th class="align-middle" rowspan="1">NPR</th>
                                {{-- Year columns will be dynamically generated by JavaScript --}}
                                <th class="text-center align-middle" rowspan="1" style="width: 200px;">Aksi</th>
                            </tr>
                        </thead>
                        <tbody id="pendosTableBody">
                            {{-- Table rows will be dynamically generated by JavaScript --}}
                        </tbody>
                    </table>
                </div>
                <button class="btn btn-sm btn-secondary ms-2" id="scrollRightBtn">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .breadcrumb-item a {
        color: #6c757d;
        text-decoration: none;
    }

    .breadcrumb-item a:hover {
        color: #002B5B;
    }

    .breadcrumb-item.active {
        color: #002B5B;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        color: #6c757d;
    }
    
    .page-breadcrumb {
        padding: 15px 0;
    }

    .table-dark th {
        background-color: #1e3a5f;
        border-color: #1e3a5f;
        font-weight: normal;
        font-size: 0.875rem;
    }
    
    .table td {
        font-size: 0.875rem;
        vertical-align: middle;
    }

    .table-bordered td, .table-bordered th {
        border-color: #dee2e6;
    }

    .bg-light {
        background-color: #f8f9fa !important;
    }

    .btn-primary {
        background-color: #1e3a5f;
        border-color: #1e3a5f;
    }

    .btn-primary:hover {
        background-color: #162c46;
        border-color: #162c46;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #5a6268;
    }

    .form-control-sm {
        height: calc(1.5em + 0.5rem + 2px);
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        border-radius: 0.2rem;
    }

    .input-group-text {
        border-left: 0;
    }

    .form-control:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }
</style>

@push('scripts')
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const sidebar = document.querySelector('.sidebar');
        const breadcrumbContainer = document.getElementById('breadcrumb-container');
        
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.attributeName === 'class') {
                    const isSidebarCollapsed = sidebar.classList.contains('collapsed');
                    breadcrumbContainer.style.left = isSidebarCollapsed ? '30px' : '280px';
                }
            });
        });

        observer.observe(sidebar, {
            attributes: true
        });

        const pendosTableContainer = document.getElementById('pendosTableContainer');
        const scrollLeftBtn = document.getElementById('scrollLeftBtn');
        const scrollRightBtn = document.getElementById('scrollRightBtn');
        const pendosTableHeader = document.getElementById('pendosTableHeader');
        const pendosTableBody = document.getElementById('pendosTableBody');

        // Initial years setup
        let currentStartYear = parseInt(pendosTableContainer.dataset.startYear);
        const numberOfYears = parseInt(pendosTableContainer.dataset.numberOfYears);

        // Pass the users data and yearly totals
        const projectUsers = JSON.parse('{!! $projectUsersJson !!}');
        const yearlyTotals = @json($yearlyTotals ?? []);

        function renderTableYears() {
            // Clear existing year headers
            let headerRow = pendosTableHeader.querySelector('tr');
            // Remove all th elements except the first three (No, Nama, NPR) and the last one (Detail)
            let existingYearHeaders = headerRow.querySelectorAll('th:nth-child(n+4):not(:last-child)');
            existingYearHeaders.forEach(th => th.remove());

            // Add new year headers
            for (let year = currentStartYear; year < currentStartYear + numberOfYears; year++) {
                let newTh = document.createElement('th');
                newTh.className = 'text-center align-middle';
                newTh.textContent = 'Dosis ' + year;
                headerRow.insertBefore(newTh, headerRow.lastElementChild); // Insert before 'Detail'
            }

            // Clear existing table body rows
            pendosTableBody.innerHTML = '';

            // Populate table body with data for current years
            if (projectUsers.length === 0) {
                let emptyRow = document.createElement('tr');
                let emptyCell = document.createElement('td');
                emptyCell.colSpan = 4 + numberOfYears; // 3 fixed + dynamic years + 1 detail
                emptyCell.className = 'text-center';
                emptyCell.textContent = 'Tidak ada data SDM dalam project ini';
                emptyRow.appendChild(emptyCell);
                pendosTableBody.appendChild(emptyRow);
                return;
            }

            projectUsers.forEach((user, index) => {
                let row = document.createElement('tr');
                row.setAttribute('data-user-id', user.id);
                
                let tdNo = document.createElement('td');
                tdNo.className = 'text-center';
                tdNo.textContent = index + 1;
                row.appendChild(tdNo);

                let tdNama = document.createElement('td');
                tdNama.textContent = user.nama;
                row.appendChild(tdNama);

                let tdNpr = document.createElement('td');
                tdNpr.textContent = user.npr ?? '-';
                row.appendChild(tdNpr);

                for (let year = currentStartYear; year < currentStartYear + numberOfYears; year++) {
                    let tdDosis = document.createElement('td');
                    tdDosis.className = 'text-center';
                    
                    // Sum up all dosis values for this year
                    let totalDosis = 0;
                    user.pemantauanDosisPendos.forEach(dosis => {
                        if (parseInt(dosis.year) === year) {
                            totalDosis += parseFloat(dosis.dosis) || 0;
                        }
                    });
                    
                    // Display the total with 2 decimal places and mSv unit
                    tdDosis.textContent = totalDosis > 0 ? totalDosis.toFixed(2) + ' mSv' : '-';
                    row.appendChild(tdDosis);
                }

                let tdDetail = document.createElement('td');
                tdDetail.className = 'text-center';
                let buttonGroup = document.createElement('div');
                buttonGroup.className = 'd-flex gap-2 justify-content-center';
                
                let detailButton = document.createElement('button');
                detailButton.className = 'btn btn-warning btn-sm';
                detailButton.innerHTML = '<i class="fas fa-eye me-1"></i>Detail';
                detailButton.addEventListener('click', function() {
                    const projectId = {{ $project->id }};
                    const userId = user.id;
                    window.location.href = `/super-admin/pendos/${projectId}/${userId}/detail`;
                });
                
                buttonGroup.appendChild(detailButton);
                tdDetail.appendChild(buttonGroup);
                row.appendChild(tdDetail);

                pendosTableBody.appendChild(row);
            });
        }

        // Initial render
        renderTableYears();

        scrollLeftBtn.addEventListener('click', function() {
            // Prevent going below a reasonable minimum year, e.g., 1900
            if (currentStartYear > 1900) { 
                currentStartYear--;
                renderTableYears();
            }
        });

        scrollRightBtn.addEventListener('click', function() {
            // Allow going forward, data will show as '-' if not available
            currentStartYear++;
            renderTableYears();
        });
    });
</script>
@endpush
@endsection 